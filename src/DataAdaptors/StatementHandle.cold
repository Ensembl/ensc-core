#include "StatementHandle.h"
#include "mysql.h"
#include "EnsC.h"

#ifdef __hpux
 #include <varargs.h>
 ResultRow *MysqlStatementHandle_execute(va_alist);
#else
 #include <stdarg.h>
 ResultRow *MysqlStatementHandle_execute(StatementHandle *sth, ...);
#endif



StatementHandle *StatementHandle_new() {
  StatementHandle *sth;

  if ((sth = (StatementHandle *)calloc(1,sizeof(StatementHandle))) == NULL) {
    fprintf(stderr,"ERROR: Failed allocating space for sth\n");
    return NULL;
  }

/* for now theres only one */
  sth->execute = MysqlStatementHandle_execute;

  return sth;
}

#ifdef __hpux /* Machines with vararg vsprintf */

ResultRow *MysqlStatementHandle_execute(va_alist) {
  fprintf(stderr, "ERROR: vararg version of MysqlStatementHandle_execute not implemented - Nag Steve\n");
  exit(1);
}

#else /* Machines with stdarg vsprintf */

ResultRow *MysqlStatementHandle_execute(StatementHandle *sth, ...) {
  va_list args;
  char statement[EXTREMELEN];
  int retval;
  MYSQL_RES *results;

  va_start(args, sth);
  retval = vsnprintf(statement, EXTREMELEN, sth->statementFormat, args);
  va_end(args);

  if (retval < 0 || retval > EXTREMELEN) {
    fprintf(stderr, "ERROR: vsnprintf call failed during statement execution\n");
    exit(1);
  }

  
}

#endif
